import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.ajoberstar.grgit' version '5.0.0'
}

group 'net.william278'
version "$ext.plugin_version-${versionMetadata()}"

ext {
    set 'version', version.toString()
}

repositories {
    mavenCentral()

    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.minebench.de/' }
    maven { url 'https://repo.codemc.io/repository/maven-snapshots/' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'net.william278:HuskHomes2:4.1'
    compileOnly 'org.jetbrains:annotations:24.0.1'

    implementation 'de.themoep:inventorygui:1.6-SNAPSHOT'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'de.themoep:minedown-adventure:1.7.2-SNAPSHOT'
    implementation 'net.kyori:adventure-text-serializer-legacy:4.13.0'
    implementation 'net.kyori:adventure-platform-bukkit:4.3.0'
    implementation 'net.william278:Annotaml:2.0.1'
    implementation 'dev.dejvokep:boosted-yaml:1.3.1'
    implementation 'net.wesjd:anvilgui:1.6.3-SNAPSHOT'
    implementation 'net.william278:DesertWell:1.1.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

compileJava.options.encoding = 'UTF-8'
compileJava.options.release.set 16

processResources {
    filesNotMatching(['**/*.png', '**/*.svg']) {
        filter ReplaceTokens as Class, beginToken: '${', endToken: '}',
                tokens: rootProject.ext.properties
    }
}

shadowJar {
    relocate 'org.apache.commons.io', 'net.william278.huskhomes.gui.libraries.commons.io'
    relocate 'org.apache.commons.text', 'net.william278.huskhomes.gui.libraries.commons.text'
    relocate 'org.apache.commons.lang3', 'net.william278.huskhomes.gui.libraries.commons.lang3'
    relocate 'org.jetbrains', 'net.william278.huskhomes.gui.libraries'
    relocate 'org.intellij', 'net.william278.huskhomes.gui.libraries'
    relocate 'de.themoep.inventorygui', 'net.william278.huskhomes.gui.libraries.inventorygui'
    relocate 'de.themoep.minedown', 'net.william278.huskhomes.gui.libraries.minedown'
    relocate 'net.kyori', 'net.william278.huskhomes.gui.libraries'
    relocate 'net.wesjd', 'net.william278.huskhomes.gui.libraries'
    relocate 'net.william278.annotaml', 'net.william278.huskhomes.gui.libraries.annotaml'
    relocate 'net.william278.desertwell', 'net.william278.huskhomes.gui.libraries.desertwell'
    relocate 'dev.dejvokep', 'net.william278.huskhomes.gui.libraries.boostedyaml'

    destinationDirectory.set(file("$rootDir/target"))
    archiveClassifier.set('')
}

jar {
    dependsOn('shadowJar')
}

test {
    useJUnitPlatform()
}

logger.lifecycle("Building HuskHomesGUI ${version} by William278")

@SuppressWarnings('GrMethodMayBeStatic')
def versionMetadata() {
    // Get if there is a tag for this commit
    def tag = grgit.tag.list().find { it.commit.id == grgit.head().id }
    if (tag != null) {
        return ''
    }

    // Otherwise, get the last commit hash and if it's a clean head
    if (grgit == null) {
        return System.getenv("GITHUB_RUN_NUMBER") ? 'build.' + System.getenv("GITHUB_RUN_NUMBER") : 'unknown'
    }
    return grgit.head().abbreviatedId + (grgit.status().clean ? '' : '-indev')
}